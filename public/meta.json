{
  "label": "External Step template",
  "description": "External step template description",
  "categories": ["Logical"],
  "tags": null,
  "recommended": null,
  "icon": "",
  "iconType": "default",
  "iconUrl": "",
  "shape": "circle",
  "isGatewayStep": false,
  "publishedBy": "Eugene Annienkov",
  "version": "0.0.1",
  "help": "Description for step template",
  "isExternalStep": true,
  "template": "var codeLength = <%- flowStep.data.params.codeLength %>;\\nif (typeof codeLength != 'number') { codeLength = parseInt(codeLength); }\\nvar text = '';\\nvar possible = '';\\nif (<%- flowStep.data.params.includeUpperCase %>) { possible += 'ABCDEFGHJKLMNPQRSTUVWXYZ'; }\\nif (<%- flowStep.data.params.includeUpperCase %> && !<%- flowStep.data.params.avoidAmbiguous %>) { possible += 'IO'; }\\nif (<%- flowStep.data.params.includeLowerCase %>) { possible += 'abcdefghijkmnopqrstuvwxyz'; }\\nif (<%- flowStep.data.params.includeLowerCase %> && !<%- flowStep.data.params.avoidAmbiguous %>) { possible += 'l'; }\\nif (<%- flowStep.data.params.includeNumbers %>) { possible += '23456789'; }\\nif (<%- flowStep.data.params.includeNumbers %> && !<%- flowStep.data.params.avoidAmbiguous %>) { possible += '10'; }\\nif (<%- flowStep.data.params.includeSymbols %>) { possible += '~!@#$%^&*()-_=+[]{};:<>,.?'; }\\nif (possible.length < 1) {\\n  this.log.error('At least one character type must be switched on for a code to be generated.')\\n  throw 'At least one character type must be switched on for a code to be generated.';\\n}\\n\\nif (codeLength > 2048) {\\n  codeLength = 2048;\\n  this.log.warn('Max length of generated code is 2048 characters');\\n}\\n\\nfor(var i = 0; i < codeLength; i++) {\\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\\n}\\n\\nreturn this.exitStep('next', text);",
  "data": {
    "exits": [
      {
        "id": "next",
        "label": "next",
        "condition": ""
      }
    ],
    "dataOut": "generatedCode",
    "params": {
      "avoidAmbiguous": false,
      "codeLength": "",
      "includeLowerCase": false,
      "includeNumbers": false,
      "includeSymbols": false,
      "includeUpperCase": false
    }
  }
}
